# ===============================================
# CONFIGURAÇÕES DO SERVIDOR WEB
# ===============================================
# Porta onde a API-1 irá rodar
server.port=8080
# Nome da aplicação (bom para logs e monitoramento)
spring.application.name=fipe-gateway-api


# ===============================================
# CONFIGURAÇÕES DO BANCO DE DADOS (POSTGRESQL)
# ===============================================
# URL de conexão. 'postgres-db' é o nome do serviço no docker-compose.yml
spring.datasource.url=jdbc:postgresql://postgres-db:5432/fipedb
spring.datasource.username=fipeuser
spring.datasource.password=fipepassword
spring.datasource.driver-class-name=org.postgresql.Driver


# ===============================================
# CONFIGURAÇÕES DO JPA/HIBERNATE (ACESSA OS DADOS)
# ===============================================
# 'update': atualiza o schema do banco se a entidade mudar. Cuidado em produção.
# 'validate': apenas valida se a entidade e a tabela correspondem. Mais seguro.
spring.jpa.hibernate.ddl-auto=update
# Mostra no console os comandos SQL gerados pelo Hibernate. Ótimo para debug.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# ===============================================
# CONFIGURAÇÕES DA FILA (RABBITMQ)
# ===============================================
# 'rabbitmq' é o nome do serviço no docker-compose.yml
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
# É uma boa prática definir o nome da fila aqui para usar no código
queue.fipe.brand.name=fipe-brand-queue


# ===============================================
# CONFIGURAÇÕES DO CACHE (REDIS)
# ===============================================
# 'redis-cache' é o nome do serviço no docker-compose.yml
spring.redis.host=redis-cache
spring.redis.port=6379


# ===============================================
# CONFIGURAÇÕES DE SEGURANÇA (JWT)
# ===============================================
# Coloque uma chave secreta longa e complexa aqui. Pode ser gerada online.
jwt.secret=SUA_CHAVE_SECRETA_SUPER_LONGA_E_SEGURA_AQUI_GERADA_COM_BASE64


# ===============================================
# CONFIGURAÇÕES DA DOCUMENTAÇÃO (SWAGGER/OPENAPI)
# ===============================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html